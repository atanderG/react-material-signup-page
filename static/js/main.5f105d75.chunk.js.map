{"version":3,"sources":["ToDo.js","Firebase.js","signupin/SignUp.js","signupin/index.js","App.js","reportWebVitals.js","index.js"],"names":["ToDo","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","firestore","SignUp","Grid","Paper","elevation","style","padding","width","margin","align","Avatar","backgroundColor","Typography","variant","TextField","fullWidth","label","placeholder","FormControl","component","marginTop","FormLabel","RadioGroup","name","display","FormControlLabel","value","control","Radio","Button","type","color","index","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iSAiBeA,I,kBCbKC,IAASC,cAAc,CACzCC,OAAQ,0CACRC,WAAY,uCACZC,UAAW,uBACXC,cAAe,mCACfC,kBAAmB,eACnBC,MAAO,8CAMcC,Y,gGCgCRC,MAtCf,WAII,OACI,cAACC,EAAA,EAAD,UACI,eAACC,EAAA,EAAD,CAAOC,UAAW,GAAIC,MALX,CAAEC,QAAS,YAAaC,MAAO,IAAKC,OAAQ,aAKvD,UACI,eAACN,EAAA,EAAD,CAAMO,MAAM,SAAZ,UACI,cAACC,EAAA,EAAD,CAAQL,MALJ,CAAEM,gBAAiB,SAKvB,SACI,cAAC,IAAD,MAEJ,oBAAIN,MATA,CAAEG,OAAQ,GASd,qBACA,cAACI,EAAA,EAAD,CAAYC,QAAQ,UAApB,iDAGJ,iCACI,cAACC,EAAA,EAAD,CAAWC,WAAS,EAACC,MAAM,OAAOC,YAAY,oBAC9C,cAACH,EAAA,EAAD,CAAWC,WAAS,EAACC,MAAM,aAC3B,eAACE,EAAA,EAAD,CAAaC,UAAU,WAAWd,MAAO,CAACe,UAAW,QAArD,UACI,cAACC,EAAA,EAAD,CAAWF,UAAU,SAArB,oBACA,eAACG,EAAA,EAAD,CAAY,aAAW,SAASC,KAAK,UAAUlB,MAAO,CAAEmB,QAAS,WAAjE,UACI,cAACC,EAAA,EAAD,CAAkBC,MAAM,SAASC,QAAS,cAACC,EAAA,EAAD,IAAWZ,MAAM,WAC3D,cAACS,EAAA,EAAD,CAAkBC,MAAM,OAAOC,QAAS,cAACC,EAAA,EAAD,IAAWZ,MAAM,eAIjE,cAACF,EAAA,EAAD,CAAWC,WAAS,EAACC,MAAM,iBAC3B,cAACF,EAAA,EAAD,CAAWC,WAAS,EAACC,MAAM,aAC3B,cAACF,EAAA,EAAD,CAAWC,WAAS,EAACC,MAAM,qBAC3B,cAACa,EAAA,EAAD,CAAQC,KAAK,SAASC,MAAM,UAAUlB,QAAQ,YAA9C,8BC7BLmB,MANf,WACI,OACI,cAAC,EAAD,KC6DOC,ICvDAC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCAdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.5f105d75.chunk.js","sourcesContent":["import React from 'react';\r\nimport {List, ListItem, ListItemText} from '@material-ui/core';\r\n\r\nfunction ToDo(props) {\r\n    return (\r\n      <>\r\n        <List>\r\n        <ListItem>         \r\n          <ListItemText primary={props.text} />\r\n        </ListItem>\r\n        \r\n      </List>\r\n            \r\n      </>\r\n    )\r\n}\r\n\r\nexport default ToDo\r\n","\r\nimport firebase from 'firebase/compat/app';\r\nimport 'firebase/compat/firestore';\r\n\r\nconst firebaseApp = firebase.initializeApp({\r\n  apiKey: \"AIzaSyCiy2--BT9ZGx2jjyrBarDVfIk_Y3eMJKE\",\r\n  authDomain: \"todo-app-react-9ae0b.firebaseapp.com\",\r\n  projectId: \"todo-app-react-9ae0b\",\r\n  storageBucket: \"todo-app-react-9ae0b.appspot.com\",\r\n  messagingSenderId: \"426353532524\",\r\n  appId: \"1:426353532524:web:d1c317c61780a27dde8249\"\r\n});\r\n\r\n// Initialize Firebase\r\n//const app = initializeApp(firebaseConfig);\r\n//const db = getFirestore(firebaseApp);\r\nconst db = firebaseApp.firestore();\r\nexport default db;\r\n\r\n","import React from 'react';\r\nimport { Grid, Paper, Avatar, Typography, TextField, Button } from '@material-ui/core';\r\nimport AccountCircleIcon from '@material-ui/icons/AccountCircle';\r\nimport Radio from '@material-ui/core/Radio';\r\nimport RadioGroup from '@material-ui/core/RadioGroup';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport FormLabel from '@material-ui/core/FormLabel';\r\n\r\n\r\nfunction SignUp() {\r\n    const paperStyle = { padding: '30px 20px', width: 300, margin: '20px auto' }\r\n    const headerStyle = { margin: 0 }\r\n    const avatarStyle = { backgroundColor: 'Green' }\r\n    return (\r\n        <Grid>\r\n            <Paper elevation={20} style={paperStyle}>\r\n                <Grid align='center'>\r\n                    <Avatar style={avatarStyle}>\r\n                        <AccountCircleIcon />\r\n                    </Avatar>\r\n                    <h2 style={headerStyle}>Sign up</h2>\r\n                    <Typography variant='caption'>Please fill this from to signup!</Typography>\r\n                </Grid>\r\n\r\n                <form>\r\n                    <TextField fullWidth label='Name' placeholder=\"enter your name\"></TextField>\r\n                    <TextField fullWidth label='Email Id'></TextField>\r\n                    <FormControl component=\"fieldset\" style={{marginTop: '10px'}}>\r\n                        <FormLabel component=\"legend\">Gender</FormLabel>\r\n                        <RadioGroup aria-label=\"gender\" name=\"gender1\" style={{ display: 'initial' }}>\r\n                            <FormControlLabel value=\"female\" control={<Radio />} label=\"Female\" />\r\n                            <FormControlLabel value=\"male\" control={<Radio />} label=\"Male\" />\r\n\r\n                        </RadioGroup>\r\n                    </FormControl>\r\n                    <TextField fullWidth label='Phone Number'></TextField>\r\n                    <TextField fullWidth label='Password'></TextField>\r\n                    <TextField fullWidth label='Confirm Password'></TextField>\r\n                    <Button type='Submit' color='primary' variant='contained'>Sign up</Button>\r\n\r\n                </form>\r\n\r\n            </Paper>\r\n        </Grid>\r\n    )\r\n}\r\n\r\nexport default SignUp\r\n","import React from 'react'\r\nimport SignUp from './SignUp';\r\n\r\n\r\nfunction index() {\r\n    return (\r\n        <SignUp />\r\n    )\r\n}\r\n\r\nexport default index\r\n","import React, {useState, useEffect} from 'react';\nimport {Button, TextField } from '@material-ui/core';\nimport ToDo from './ToDo';\nimport './App.css';\nimport { collection , addDoc, doc, onSnapshot, getDocs} from 'firebase/firestore';\nimport db from './Firebase.js';\nimport SignUpIn from './signupin';\n\n\nfunction App() {\n  const [todos, setTodos] = useState([]);\n  const [input, SetInput] = useState('')\n \n  //when the app loads, we need to listen to the database and fetch new todos as the get added/removed\n  useEffect(() => {\n    /* console.log(db.collection('todos').onSnapshot(snapshot=>{\n      setTodos(snapshot.docs.map(doc=>doc.data().text))\n    })) */\n   \n\n  }, []) // if blank run once,\n\n  const addTodo = async (event) => { \n       \n      event.preventDefault();\n\n      /* db.collection('todos').add({\n        text:input\n      }) */\n      const docRef = await addDoc(collection(db, 'todos'),{\n        text:input\n      })\n\n      console.log('button clicked');\n      setTodos([...todos, input]);\n      \n      \n      SetInput('');\n  }\n\n\n  return (\n    <div className=\"App\">\n      <h1>hello Clever Programmers ..</h1>\n\n      <form>\n        <TextField value={input} required id=\"standard-required\" label=\"Write a Todo\"  onChange={e => SetInput(e.target.value)}/>\n        \n        <Button disabled= {!input} variant=\"contained\" color=\"primary\" type=\"submit\" onClick={addTodo}>\n          Add Todo\n        </Button>\n        \n      </form>\n\n      <ul>\n        {todos.map((todo) =>(\n          <ToDo text={todo} />\n        )\n          \n        )}\n        \n        \n      </ul>\n      \n    </div>\n  );\n}\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport SignUpIn from './signupin';\n\nReactDOM.render(\n  <React.StrictMode>\n    <SignUpIn />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}